# Guided Exploration No. 3
# Lisa Jurries

# COMMENT THIS CODE - LRJ This imports the random library
import random


def main():
    # COMMENT THIS CODE - LRJ This is to declare an empty list for possible names
    possible_names = []

# COMMENT THIS CODE - LRJ This is to open an new file 'rap-names-output.txt' for write 'w' acess and store the names that are generated by the code
    outputFile = open('rap-names-output.txt', 'w')

# COMMENT THIS CODE - LRJ This is to open the file 'rap-names.txt' for read access 'r'
    with open('rap-names.txt', 'r') as dataFile:
        # COMMENT THIS CODE
        for name in dataFile:
            # COMMENT THIS CODE - this is the for loop that will iterate through the file one line at a time
            possible_names.append(name.rstrip())

# COMMENT THIS CODE - LRJ This is an input asking user for how many names they want, which is an integer stored in the variable count
    count = int(input('How many rap names would you like to create? '))
    # COMMENT THIS CODE - LRH This is an input asking user for how many parts they want the name to contain, which is stored in the variable parts
    parts = int(input('How many parts should the name contain? '))

# COMMENT THIS CODE - LRJ this is a for loop that will iterate through the number of times value stored in the count variable
    for i in range(count):
        # COMMENT THIS CODE - LRJ this will store the information
        name_parts = []
    # COMMENT THIS CODE - LRJ this is a for loop that will iterate through the number of times value stored in the parts variable
    for j in range(parts):
        # COMMENT THIS CODE - LRJ this will append the data collected in possible names to name parts after it randomizes for the lenghth of the string with -1 including the first character
        name_parts.append(
            possible_names[random.randint(0, len(possible_names)-1)])

# COMMENT THIS CODE - LRJ this will join the parts and write to the output file
    outputFile.write(f"{' '.join(name_parts)}\n")
    # COMMENT THIS CODE - this will join the parts and print to screen
    print(f"{' '.join(name_parts)}")

    # COMMENT THIS CODE
    outputFile.close()


main()
